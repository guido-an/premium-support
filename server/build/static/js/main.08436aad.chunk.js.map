{"version":3,"sources":["images/logo-vanilla-marketing.png","api/serviceAPI.js","components/NavBar.js","components/ProtectedRoute.js","components/ProtectedRouteAdmin.js","components/Login.js","pages/Home.js","components/Table.js","pages/user/TicketsUser.js","pages/user/CreaTicket.js","pages/user/TicketPage.js","pages/admin/TicketsAdmin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","serviceAPI","axios","create","baseURL","process","withCredentials","NavBar","liftUserUp","currentUser","useState","open","setVisible","logoutUser","get","then","alertLogin","alert","id","to","className","src","logo","alt","isOpen","menuClicked","width","height","strokeWidth","rotate","color","borderRadius","animationDuration","onClick","ProtectedRoute","Component","component","rest","render","props","pathname","state","from","location","admin","Login","history","username","setUsername","password","setPassword","onSubmit","e","preventDefault","post","res","data","push","catch","err","console","log","onChange","target","value","type","placeholder","name","Home","style","textAlign","Table","array","map","item","index","key","_id","title","time","service","active","TicketsUser","tickets","setTickets","useEffect","CreaTicket","formRef","React","createRef","formData","FormData","current","ref","required","rows","TicketPage","myId","match","params","ticket","setTicket","messageSuccess","setMessageSuccess","getTicket","user","message","answers","answer","email","TicketsAdmin","App","setCurrentUser","exact","path","ProtectedRouteAdmin","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08436aad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-vanilla-marketing.6ad8f5e8.png\";","import axios from 'axios';\n\nexport const serviceAPI = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  withCredentials: true,\n});\n\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport './NavBar.css';\nimport logo from '../images/logo-vanilla-marketing.png';\nimport HamburgerMenu from 'react-hamburger-menu';\nimport {serviceAPI} from '../api/serviceAPI';\n\nexport default function NavBar({liftUserUp,currentUser}) {\n  const [open, setVisible] = useState(false);\n\n  const logoutUser = () => {\n    serviceAPI.get('/auth/logout').then(() => {\n      liftUserUp(null);\n    });\n  };\n\n  const alertLogin = ()=> {\n    if(!currentUser){\n      alert(\"Questa sezione Ã¨ privata. Effettua il login per accedere :) \")\n    }\n  }\n\n  return (\n  \n    <section>\n      <header id=\"header-mobile\">\n        <div id=\"header-mobile-container\">\n          <div>\n            <Link to=\"/\">\n              <img className=\"logo\" src={logo} alt=\"logo-vanilla-marketing\" />\n            </Link>\n          </div>\n          <div id=\"burger-icon\">\n            <HamburgerMenu\n              isOpen={open}\n              menuClicked={() => setVisible(!open)}\n              width={30}\n              height={18}\n              strokeWidth={3}\n              rotate={0}\n              color=\"black\"\n              borderRadius={0}\n              animationDuration={0.1}\n            />\n          </div>\n        </div>\n        {open && (\n          <nav id=\"header-nav\">\n            <ul>\n              <Link onClick={alertLogin} to=\"/tickets\">I miei tickets</Link>\n              <Link onClick={alertLogin} to=\"/crea-ticket\">Apri un ticket</Link>\n              <p onClick={logoutUser} id=\"logout-btn\">Logout</p>\n            </ul>\n          </nav>\n        )}\n      </header>\n      \n      <header id=\"header-desktop\">\n        <div id=\"header-desktop-container\">\n          <div>\n            <Link to=\"/\">\n              <img className=\"logo\" src={logo} alt=\"logo-vanilla-marketing\" />\n            </Link>\n          </div>\n          <div>\n            <nav id=\"header-nav\">\n              <ul>\n                <Link onClick={alertLogin} to=\"/tickets\">I miei tickets</Link>\n                <Link onClick={alertLogin} to=\"/crea-ticket\">Apri un ticket</Link>\n                {/* <Link onClick={alertLogin} to=\"/admin\">Admin</Link> */}\n              </ul>\n            </nav>\n          </div>\n          <div>\n            <p onClick={logoutUser} id=\"logout-btn\">\n              Logout\n            </p>\n          </div>\n        </div>\n      </header>\n     \n    </section>\n  );\n}\n","// auth/protected-route.js\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute  = ({component: Component, currentUser, ...rest}) => {\n  \n    return (\n      <Route\n        {...rest}\n        render={ props  => {\n            if(currentUser){\n              return <Component {...props} currentUser={currentUser}/>\n            } else {\n              return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n            }\n          }\n        }\n      />\n    )\n}\nexport default ProtectedRoute;","// auth/protected-route.js\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute  = ({component: Component, currentUser, ...rest}) => {\n    return (\n      <Route\n        {...rest}\n        render={ props  => {\n            if(currentUser && currentUser.admin){\n              return <Component {...props} currentUser={currentUser}/>\n            } else {\n              return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n            }\n          }\n        }\n      />\n    )\n}\nexport default ProtectedRoute;","import React, {useState} from 'react';\nimport {serviceAPI} from '../api/serviceAPI';\nimport './Login.css';\n\nexport default function Login({liftUserUp, history}) {\n  let [username, setUsername] = useState('');\n  let [password, setPassword] = useState('');\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    serviceAPI\n      .post('/auth/login', {\n        username,\n        password,\n      })\n      .then(res => {\n        const currentUser = res.data.currentUser\n        liftUserUp(currentUser);\n        if (currentUser.admin) {\n          history.push('/admin');\n        } else {\n          history.push('/tickets');\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      });\n  };\n\n  return (\n    <section className=\"login-section\">\n      <form onSubmit={onSubmitHandler}>\n        <p>\n          <strong>Username</strong>\n        </p>\n        <input\n          onChange={e => setUsername(e.target.value)}\n          type=\"text\"\n          placeholder=\"Username\"\n          name=\"username\"\n        />\n        <p>\n          <strong>Password</strong>\n        </p>\n        <input\n          onChange={e => setPassword(e.target.value)}\n          type=\"password\"\n          placeholder=\"*****\"\n          name=\"password\"\n        />\n        <button className=\"button-success\" type=\"submit\">LOGIN</button>\n      </form>\n    </section>\n  );\n}\n","import React from 'react';\nimport Login from '../components/Login';\n\nexport default function Home({liftUserUp, history}) {\n  return (\n    <section>\n      <h1 style={{ textAlign: 'center' }} className=\"title-page\">Premium support</h1>\n      <Login liftUserUp={liftUserUp} history={history} />\n    </section>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport './Table.css'\n\n\nconst Table = ({array}) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Titolo</th>\n          <th>Data</th>\n          <th>Servizio</th>\n          <th>Stato</th>\n          <th>Ticket</th>\n        </tr>\n      </thead>\n      <tbody>\n        {array.map((item, index) => {\n          return (\n            <tr key={index}>\n            <td> <Link to={`/tickets/${item._id}`}><strong>{item.title}</strong></Link></td>\n              <td>{item.time}</td>\n              <td>{item.service}</td>\n               {item.active ? (\n                <td>aperto</td>\n               ) : (\n                 <td>chiuso</td>\n               )}\n              <td> <Link to={`/tickets/${item._id}`}>> Vedi ticket</Link></td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React, {useState, useEffect} from 'react'\nimport {serviceAPI} from '../../api/serviceAPI';\nimport TableUser from '../../components/Table'\n\nexport default function TicketsUser({currentUser}){\n\n    let [tickets, setTickets] = useState([])\n\n\n    useEffect(() => {\n        serviceAPI.get('/tickets')\n        .then(res => {\n          setTickets((tickets = res.data));\n          console.log(tickets, \"tickets from page\")\n        })\n      }, []); // pass an array as second argument to avoid infinite loop\n\n    return(\n        \n        <section>\n            <div className=\"section-container\">\n            {currentUser && (<h1 className=\"title-page\">Hello {currentUser.username}!</h1>)}\n              <TableUser array={tickets}></TableUser>\n            </div>\n        </section>\n    )\n}","\nimport React, {useState} from 'react';\nimport {serviceAPI} from '../../api/serviceAPI';\nimport './CreaTicket.css'\n\nexport default function CreaTicket({history}) {\n  let [title, setTitle] = useState('');\n  let [service, setService] = useState('');\n  let [message, setMessage] = useState('');\n\n\n  let formRef = React.createRef();\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData(formRef.current)\n    serviceAPI\n      .post('/crea-ticket', formData)\n      .then(() => {\n        history.push('/tickets');\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  return (\n    <div>\n      <div className=\"section-container create-ticket-conatiner\">\n      <h1 className=\"title-page\">Crea un ticket</h1>\n      <form onSubmit={onSubmitHandler} ref={formRef}>\n       <label>Per quale servizio possiamo aiutarti?</label>\n      <select name=\"service\" required>\n          <option value=\"\">* Seleziona un servizio</option>\n          <option value=\"Web Development\">Web Development</option>\n          <option value=\"Social Media\">Social Media</option>\n          <option value=\"Web Marketing\">Web Marketing</option>\n          <option value=\"Graphic Design\">Graphic Design</option>\n        </select>\n       <label>Titolo</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"* Titolo\"\n          required\n        />\n        <label>Messaggio</label>\n        <textarea\n          className=\"my-textarea\"\n          name=\"message\"\n          placeholder=\"* Messaggio\"\n          rows=\"10\"\n          required\n        />\n        <label>Per caricare un file in .jpeg, .png o screenshot</label>\n        <input id=\"file-upload\" type=\"file\" name=\"picture\"/>\n        <button className=\"button-success\" type=\"submit\">CREA TICKET</button>\n      </form>\n      </div>\n    </div>\n  );\n}\n","import './TicketPage.css';\nimport React, {useState, useEffect} from 'react';\nimport {serviceAPI} from '../../api/serviceAPI';\n\nconst TicketPage = ({match}) => {\n  let myId = match.params.id;\n\n  let [ticket, setTicket] = useState({});\n  let [messageSuccess, setMessageSuccess] = useState(false);\n\n  const getTicket = () => {\n    serviceAPI.get(`/tickets/${myId}`).then(res => {\n      setTicket((ticket = res.data.ticket));\n    });\n  }\n\n  useEffect(() => {\n    getTicket()\n  }, []); // pass an array as second argument to avoid infinite loop\n\n  let formRef = React.createRef();\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData(formRef.current);\n    serviceAPI\n      .post('/answer', formData)\n      .then(() => {\n        getTicket() // update ticket with new answer\n        setMessageSuccess(messageSuccess=true)\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  console.log(ticket, 'this is the ticket');\n  return (\n    <section className=\"section-container\">\n      <div>\n        <h1 className=\"title-page\">{ticket.title}</h1>\n\n        <div className=\"message-container\">\n          {ticket.user && (\n            <p>\n              <strong>{ticket.user.username}</strong>\n            </p>\n          )}\n          <span className=\"ticket-time\">{ticket.time}</span>\n          <p>{ticket.message}</p>\n        </div>\n      </div>\n\n      {ticket.answers &&\n        ticket.answers.map((answer, index) => {\n          return (\n            <div key={index} className={\"message-container \" + (answer.admin ? 'admin-answer' : '')}>\n              <p>\n                <strong>{answer.username}</strong>\n              </p>\n              <span className=\"ticket-time\">{answer.time}</span>\n              <p> {answer.message}</p>\n            </div>\n          );\n        })}\n\n      <h2>Nuova risposta</h2> {messageSuccess && (<p style={{color: \"green\"}}>Messaggio inviato con successo!</p>)}\n      <form onSubmit={onSubmitHandler} ref={formRef}>\n        <textarea\n          className=\"my-textarea\"\n          name=\"message\"\n          placeholder=\"* Messaggio\"\n          rows=\"10\"\n          required\n        />\n        <input type=\"text\" name=\"_id\" value={ticket._id} />\n        <input type=\"text\" name=\"title\" value={ticket.title} />\n        <input type=\"text\" name=\"service\" value={ticket.service} />\n        {ticket.user && ( <input type=\"text\" name=\"userEmail\" value={ticket.user.email} />)}\n  \n        <button className=\"button-success\" type=\"submit\">\n          RISPONDI\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default TicketPage;\n","import React, {useEffect, useState}  from 'react'\nimport { serviceAPI } from '../../api/serviceAPI'\nimport Table from '../../components/Table'\n\n\nexport default function TicketsAdmin(){\n    let [tickets, setTickets] = useState([])\n\n    useEffect(() => {\n        serviceAPI.get('/admin')\n        .then(res => {\n         setTickets((tickets = res.data));\n          console.log(res, \"tickets for admin\")\n        })\n      }, []); // pass an array as second argument to avoid infinite loop\n    \n    return(\n        <section className=\"section-container\">\n            <h1>Tickets admin</h1>\n            <Table array={tickets}></Table>\n        </section>\n    )\n}\n\n","// import React, {useState, useEffect} from 'react';\n// import './App.css';\n// import {Route, Switch} from 'react-router-dom';\n// import NavBar from './components/NavBar';\n// import ProtectedRoute from './components/ProtectedRoute';\n// import ProtectedRouteAdmin from './components/ProtectedRouteAdmin';\n// import Home from './pages/Home';\n// import TicketsUser from './pages/user/TicketsUser';\n// import CreaTicket from './pages/user/CreaTicket';\n// import TicketPage from './pages/user/TicketPage';\n// import TicketsAdmin from './pages/admin/TicketsAdmin';\n// import {serviceAPI} from './api/serviceAPI';\n\n\n// function App() {\n//   let [currentUser, setCurrentUser] = useState(null);\n\n//   const liftUserUp = user => {\n//     setCurrentUser((currentUser = user));\n//   };\n\n  \n//    useEffect(() => {\n//     serviceAPI.get('/auth/currentUser')\n//       .then(res => {\n//         setCurrentUser((currentUser = res.data.currentUser));\n//       })\n//       .catch(err => {\n//         setCurrentUser((currentUser = null));\n//       });\n//   }, []);\n\n//   console.log(currentUser, \"current user\")\n//   return (\n//     <section>\n//            <NavBar liftUserUp={liftUserUp} currentUser={currentUser} />\n//       <Switch>\n//         <Route\n//           exact\n//           path=\"/\"\n//           render={props => <Home {...props} liftUserUp={liftUserUp} />}\n//         />\n//         <ProtectedRoute\n//           currentUser={currentUser}\n//           path=\"/crea-ticket\"\n//           component={CreaTicket}\n//         />\n//         <ProtectedRoute\n//           currentUser={currentUser}\n//           exact\n//           path=\"/tickets\"\n//           component={TicketsUser}\n//         />\n//         <ProtectedRoute\n//           currentUser={currentUser}\n//           path=\"/tickets/:id\"\n//           component={TicketPage}\n//         />\n//         <ProtectedRouteAdmin\n//           currentUser={currentUser}\n//           exact\n//           path=\"/admin\"\n//           component={TicketsAdmin}\n//         />\n//       </Switch>\n//     </section>\n//   );\n// }\n\n// export default App\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Route, Switch} from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport ProtectedRouteAdmin from './components/ProtectedRouteAdmin';\nimport Home from './pages/Home';\nimport TicketsUser from './pages/user/TicketsUser';\nimport CreaTicket from './pages/user/CreaTicket';\nimport TicketPage from './pages/user/TicketPage';\nimport TicketsAdmin from './pages/admin/TicketsAdmin';\nimport {serviceAPI} from './api/serviceAPI';\n\n\nfunction App() {\n  let [currentUser, setCurrentUser] = useState({});\n\n  const liftUserUp = user => {\n    setCurrentUser((currentUser = user));\n  };\n\n  \n   useEffect(() => {\n    serviceAPI.get('/auth/currentUser')\n      .then(res => {\n        setCurrentUser((currentUser = res.data.currentUser));\n      })\n      .catch(err => {\n        setCurrentUser((currentUser = null));\n      });\n  }, []);\n\n  console.log(currentUser, \"current user\")\n  return (\n    <section>\n           <NavBar liftUserUp={liftUserUp} currentUser={currentUser} />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={props => <Home {...props} liftUserUp={liftUserUp} />}\n        />\n        <ProtectedRoute\n          currentUser={currentUser}\n          path=\"/crea-ticket\"\n          component={CreaTicket}\n        />\n        <ProtectedRoute\n          currentUser={currentUser}\n          exact\n          path=\"/tickets\"\n          component={TicketsUser}\n        />\n        <ProtectedRoute\n          currentUser={currentUser}\n          path=\"/tickets/:id\"\n          component={TicketPage}\n        />\n        <ProtectedRouteAdmin\n          currentUser={currentUser}\n          exact\n          path=\"/admin\"\n          component={TicketsAdmin}\n        />\n      </Switch>\n    </section>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}